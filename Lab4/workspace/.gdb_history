python ''
python 'qwe'
python 'print'
python 'print(1)'
python print(1)
python 0xb0-0x98
python print 0xb0-0x98
python print(0xb0-0x98)
python print('A'*(0xb0-0x98))
python print('A'*(0xb0-0x98))
p $ebp
p $esp
si
ni
p $ebp
p $esp
p $esp-$epb
p $esp-$ebp
p $ebp-$esp
python print('A'*36)
python print('A'*36+'XYZR')
ni
ni
finish
finish
ni
python print('A'*28h)
python print('A'*0x28)
python print('A'*36+'XYZR')
python print('A'*0x28+'XYZR')
info b
d 3
r
finish
ni
c
r
finish
p $ebp
c
r
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAXYZR1234567890
r
ni
finish
p $esp
p/x $esp
p $esp
p ($esp)
p *($esp)
p (vod *)($esp)
p (void *)($esp)
p/x (void *)($esp)
p/x (void *)($esp+1)
p/x (void *)($esp-1)
p/x (void *)($esp-2)
p/x (void *)($esp-3)
p/x (void *)($esp)
p/x (char *)($esp)
p (char *)($esp)
p (char *)($ebp)
p/x (char *)($ebp)
p (char *)($ebp)
p (char *)($ebp+1)
p (char *)($ebp)
p (char *)($ebp+10)
p (char *)($ebp)
ni
ni
ni
set args '-u 1180300105'
b getbuf
r < input.txt 
set args -u 1180300105
r < input.txt 
r
set args='-u 1180300105'
set args '-u 1180300105'
args
r
c
r < input.txt 
r -u 123
q
set args '-u 1180300105 <input.txt'
r
set args '-u 1180300105' '< input.txt'
r
set args '-u 1180300105' 
info terminal 
run < input.txt 
run -u 123 < input.txt  
run -u 123 < input.txt  
run -u 123   
r
python print('*'*0x28)
r
args
p args
c
q
set args -u 1180300105
r
b getbuf
r
ni
p $ebp
p *($ebp)
p (char *)($ebp)
p (char *)($ebp-1)
p (char *)($ebp-2)
p (char *)($ebp)
c
p ($ebp)
p *($ebp)
p/x ($ebp)
p/ ($ebp)
p (int *)($ebp)
p $ebp
p *0xf7fadd80
p/c *0xf7fadd80
p/s *0xf7fadd80
p *0xf7fadd80
p *0xf7fadd81
p *0xf7fadd80
p *0xf7fadd7F
p/x *0xf7fadd7F
p/x *0xf7fadd80
p/x *0xf7fadd78
p/x *0xf7fadd70
ni
r
python print('*'*0x30)
ni
p $esp
p (char *)0x55683bf8
p (char *)0x55683bf7
p (char *)0x55683bf9
p (char *)0x55683bf8
p (char *)0x55683bf0
p eax
p $eax
p/x $eax
p *(0x55683c08)
p/x *(0x55683c08)
p/x *(0x55683c08+0x28)
p/x *(0x55683c08+0x30)
p/x *(0x55683c08+0x2a)
p/x *(0x55683c08+0x2f)
p 
p/x (0x55683c08+0x2f)
p $ebp-
p/x (0x55683c08+0x2a)
p/x ($esp+0x2f)
p/x ($esp)
p (char *)($esp)
p (char *)*($esp)
p *(($esp))
p (char *)($esp)
p (char *)($esp+0x10)
p (char *)($ebp)
p (char *)($ebp+4)
set (char *)($ebp+4)
set (char *)($ebp+4)="abcd"
set (char *)($ebp+4)="01234567"
c
r
p $ebp
ni
p $ebp
ni
p $ebp
p (char *)$ebp
p (char *)($ebp)
p (char *)($ebp-4)
p (char *)($ebp-3)
p (char *)($ebp-2)
p (char *)($ebp-1)
p (char *)($ebp+1)
p (char *)($ebp)
p/x ($ebp)
p/x ($ebp + 4)
p/x ($ebp + 8)
p/x ($ebp + 4)
p ($ebp + 4)
p ($ebp + 4)
dps 
dps 0x55683c34
d 0x55683c34
d/i 0x55683c34
d/i 0x55683c34
d/i 0x55683c34
display 0x55683c34
display/i 0x55683c34
display/i 0x55683c34
display/i 0x55683c35
display/i 0x55683c36
display/i 0x55683c37
display/i 0x55683c38
display/i 0x55683c33
display/i 0x55683c34
display/i 0x55683c33
display/i 0x55683c32
display/i 0x55683c31
display/i 0x55683c33
display/i 0x55683c34
finish
ni
r
ni
python print('A'*0x29 + '1234')
ni
ni
ni
ni
p smoke
python print('\x08\x04\x8b\xbb')
python print('\x08\x04\x8b\xbb')
r
set $eip = 0x08048bbb
ni
r
ni
p (char *)($ebp)
p (char *)($ebp+4)
set (char *)($ebp+4)=0x08048bbb
p (char *)($ebp+4)
set (long)($ebp+4)=0x08048bbb
set (int)($ebp+4)=0x08048bbb
set (int *)($ebp+4)=0x08048bbb
p (char *)($ebp+4)
p (char *)($ebp)
p (char *)
ni
call fizz
r
set $eip = fizz
ni
p cookie
p 0x804e158
p/x 0x804e158
ni
ni
ni
p $ebp+8
p ($ebp+8)
p (int *)($ebp+8)
p (cahr *)($ebp+8)
p (char *)($ebp+8)
p ($ebp+8)
p/x 0x55683c0c
p/x *0x55683c0c
p/x *0x55683c0d
p/x *0x55683c0c
p/x *0x55683c0d
p/x *0x55683c0c
